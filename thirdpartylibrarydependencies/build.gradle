plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'
    id 'kotlin-android'
    id("com.apollographql.apollo3").version("3.3.2")
}

android {
    compileSdk 32

    defaultConfig {
        applicationId "alidoran.third_party"
        minSdk 24
        targetSdk 32
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }

    buildFeatures {
        viewBinding true
    }

    testOptions {
        unitTests.all {
            useJUnitPlatform()
            systemProperty "junit.jupiter.testinstance.lifecycle.default", "per_method" //Test default instance will be changed by this line
            systemProperty "junit.jupiter.execution.parallel.enabled", "true"
        }
    }
}

dependencies {
    implementation 'androidx.core:core-ktx:1.8.0'
    implementation 'androidx.appcompat:appcompat:1.4.2'
    implementation 'com.google.android.material:material:1.6.1'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
    testRuntimeOnly     "org.junit.vintage:junit-vintage-engine:$junit_vintage"
    testImplementation "org.junit.jupiter:junit-jupiter:$junit_jupiter"
    implementation "org.jetbrains.kotlin:kotlin-reflect:1.7.10"

    //Dagger
    kapt "com.google.dagger:dagger-compiler:2.42"
    implementation "com.google.dagger:dagger:2.42"
    annotationProcessor "com.google.dagger:dagger-compiler:2.42"
    annotationProcessor "com.google.dagger:dagger-android-processor:2.42"
    annotationProcessor "com.google.dagger:dagger-compiler:2.42"

    //Coroutines
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.6.3'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.6.3'

    // Room components
    implementation "androidx.room:room-runtime:2.4.2"
    annotationProcessor "androidx.room:room-compiler:2.4.2"
    androidTestImplementation "androidx.room:room-testing:2.4.2"

    //Retrofit
    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.9.0'

    //graphql converter
    implementation 'com.squareup.retrofit2:converter-scalars:2.9.0'

    //Apollo
    implementation("com.apollographql.apollo3:apollo-runtime:3.3.2")
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.5.0'

    //Mockito
    testImplementation "org.mockito:mockito-core:$mockito_core"
    testImplementation "org.mockito.kotlin:mockito-kotlin:$mockito_kotlin"
    testImplementation "io.mockk:mockk:1.12.4"
}

apollo {
    service("weather") {
        sourceFolder.set("weather")
        packageName.set("weather")
    }
    service("rocketreserver") {
        sourceFolder.set("com/example/rocketreserver")
        packageName.set("com.example.rocketreserver")
    }
}